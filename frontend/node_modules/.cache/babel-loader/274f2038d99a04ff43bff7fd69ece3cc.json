{"ast":null,"code":"import _slicedToArray from \"C:/Users/RajaJ/Downloads/YogaIntelliJ-main/YogaIntelliJ-main/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AvgPool3D } from '../kernel_names';\nimport { avgPool3dGrad } from '../ops/avg_pool_3d_grad';\nexport var avgPool3DGradConfig = {\n  kernelName: AvgPool3D,\n  inputsToSave: ['x'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 1),\n        _x = _saved[0];\n\n    var filterSize = attrs.filterSize,\n        strides = attrs.strides,\n        pad = attrs.pad,\n        dimRoundingMode = attrs.dimRoundingMode;\n    return {\n      x: function x() {\n        return avgPool3dGrad(dy, _x, filterSize, strides, pad, dimRoundingMode);\n      }\n    };\n  }\n};","map":{"version":3,"sources":["../../../../../../tfjs-core/src/gradients/AvgPool3D_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,SAAR,QAAwC,iBAAxC;AAEA,SAAQ,aAAR,QAA4B,yBAA5B;AAGA,OAAO,IAAM,mBAAmB,GAAe;AAC7C,EAAA,UAAU,EAAE,SADiC;AAE7C,EAAA,YAAY,EAAE,CAAC,GAAD,CAF+B;AAG7C,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,EAAqD;AAC7D,gCAAY,KAAZ;AAAA,QAAO,EAAP;;AACA,QAAO,UAAP,GACI,KADJ,CAAO,UAAP;AAAA,QAAmB,OAAnB,GACI,KADJ,CAAmB,OAAnB;AAAA,QAA4B,GAA5B,GACI,KADJ,CAA4B,GAA5B;AAAA,QAAiC,eAAjC,GACI,KADJ,CAAiC,eAAjC;AAGA,WAAO;AACL,MAAA,CAAC,EAAE;AAAA,eAAM,aAAa,CAClB,EADkB,EACF,EADE,EACC,UADD,EACa,OADb,EACsB,GADtB,EAC2B,eAD3B,CAAnB;AAAA;AADE,KAAP;AAID;AAZ4C,CAAxC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AvgPool3D, AvgPool3DAttrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {avgPool3dGrad} from '../ops/avg_pool_3d_grad';\nimport {Tensor, Tensor5D} from '../tensor';\n\nexport const avgPool3DGradConfig: GradConfig = {\n  kernelName: AvgPool3D,\n  inputsToSave: ['x'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x] = saved as [Tensor5D];\n    const {filterSize, strides, pad, dimRoundingMode} =\n        attrs as {} as AvgPool3DAttrs;\n\n    return {\n      x: () => avgPool3dGrad(\n          dy as Tensor5D, x, filterSize, strides, pad, dimRoundingMode)\n    };\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}